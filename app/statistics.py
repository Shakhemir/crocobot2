import os.path
from datetime import datetime
import aiofiles
import json
from telebot.types import User
from src.game import Game
from src.settings import settings


async def load_stats(file_path) -> dict:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ JSON —Ñ–∞–π–ª–∞, –∑–∞–æ–¥–Ω–æ –¥–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω—É–∂–Ω–∞—è –ø–∞–ø–∫–∞ –∏ —Å–æ–∑–¥–∞–µ–º –µ–µ
    dir_name, file_name = os.path.split(file_path)
    if dir_name and not os.path.exists(dir_name):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–¥—Ä—É–≥ –ø–∞–ø–∫–∞ –ø–æ–¥ —Å—Ç–∞—Ä—ã–º –∏–º–µ–Ω–µ–º, –≥–¥–µ "-" –≤–Ω–∞—á–∞–ª–µ
        left_part, chat_part = os.path.split(dir_name)
        if os.path.exists(old_path := os.path.join(left_part, "-" + chat_part)):
            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–∞–ø–∫—É —á–∞—Ç–∞, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "-"
            os.rename(old_path, os.path.join(left_part, chat_part))
        else:
            # –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
            os.makedirs(dir_name)

    # –ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
    if not os.path.exists(file_path):
        return {}

    async with aiofiles.open(file_path, encoding="utf-8") as f:
        content = await f.read()
    stats = json.loads(content)
    return stats


async def save_stats(file_name, stats: dict) -> None:
    async with aiofiles.open(file_name, "w", encoding="utf-8") as f:
        await f.write(json.dumps(stats, indent=4, ensure_ascii=False))


def get_chat_stats_filename(chat_id) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–∞"""
    file_name = os.path.join(
        settings.CHATS_STATS_DIR, str(chat_id).lstrip("-"), "stats.json"
    )
    return file_name


async def inc_user_stat_in_file(file_name, user: User):
    """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ñ–∞–π–ª–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""

    stats = await load_stats(file_name)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = str(user.id)
    user_stat = stats.get(user_id, {})
    if not user_stat:
        user_stat["score"] = 1
    else:
        user_stat["score"] += 1
    user_stat["name"] = user.full_name
    stats.update({user_id: user_stat})

    await save_stats(file_name, stats)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É


async def inc_user_stat(game: Game, user: User):
    """–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞"""

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
    chat_filename = get_chat_stats_filename(game.chat_id)
    await inc_user_stat_in_file(chat_filename, user)

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    await inc_user_stat_in_file(settings.GLOBAL_STATS_FILE, user)


async def inc_user_fine(game: Game):
    """–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à—Ç—Ä–∞—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ–≥–¥–∞ –æ–Ω –Ω–µ –≤–∑—è–ª –≤–µ–¥—É—â–µ–≥–æ"""

    if game.current_leader == game.exclusive_user:
        return  # –í—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–µ —à—Ç—Ä–∞—Ñ—É–µ–º

    chat_filename = get_chat_stats_filename(game.chat_id)
    stats = await load_stats(chat_filename)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
    user_id = str(game.exclusive_user)
    user_stat = stats.get(user_id, {})

    # –°–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω–∞—Ä—É—à–∏–ª
    is_fined = False
    user_stat["faults"] = user_stat.get("faults", 0) + 1
    if user_stat["faults"] >= settings.FAULT_SIZE:
        # –®—Ç—Ä–∞—Ñ—É–µ–º
        del user_stat["faults"]
        user_stat["fines"] = user_stat.get("fines", 0) + 1
        is_fined = True

    stats.update({user_id: user_stat})
    await save_stats(chat_filename, stats)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    return is_fined


def get_correct_word_form(count):
    if count % 10 == 1 and count % 100 != 11:
        return "–æ—Ç–≤–µ—Ç"
    elif 2 <= count % 10 <= 4 and not (12 <= count % 100 <= 14):
        return "–æ—Ç–≤–µ—Ç–∞"
    else:
        return "–æ—Ç–≤–µ—Ç–æ–≤"


async def get_global_stats():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤"""

    global_stats = await load_stats(settings.GLOBAL_STATS_FILE)
    sorted_stats = sorted(
        global_stats.items(), key=lambda x: x[1]["score"], reverse=True
    )
    top_players = sorted_stats[: settings.GLOBAL_STATS_SIZE]
    if not top_players:
        return dict(text="–ü–æ–∫–∞ –Ω–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    result_message = "üåê üèÜ <b>–ì–ª–æ–±–∞–ª—å–Ω—ã–π –¢–û–ü –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫—Ä–æ–∫–æ–¥–∏–ª–∞ üêä</b>\n\n"
    for idx, (user_id_str, data) in enumerate(top_players, start=1):
        user_name = data["name"]
        score = data["score"]
        word = get_correct_word_form(score)
        result_message += f"{idx}. {user_name} ‚Äî {score} {word}\n"
    result_message += (
        "\n–ù–∞—à —á–∞—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫—Ä–æ–∫–æ–¥–∏–ª @game_public_chat. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!"
    )
    return dict(text=result_message, parse_mode="HTML")


async def get_chat_stats(chat_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ"""

    chat_filename = get_chat_stats_filename(chat_id)
    chat_stats = await load_stats(chat_filename)
    if not chat_stats:
        return dict(text="–ü–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞.")
    sorted_stats = sorted(chat_stats.items(), key=lambda x: x[1]["score"], reverse=True)
    top_players = sorted_stats[: settings.CHAT_STATS_SIZE]
    result_message = "üèÜ <b>–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫—Ä–æ–∫–æ–¥–∏–ª–∞ üêä –≤ —ç—Ç–æ–º —á–∞—Ç–µ</b>\n\n"
    for idx, (user_id_str, data) in enumerate(top_players, start=1):
        user_name = data["name"]
        fines = data.get("fines", 0)  # –®—Ç—Ä–∞—Ñ—ã
        score = data["score"] - fines
        word = get_correct_word_form(score)
        result_message += f"{idx}. {user_name} ‚Äî {score} {word}\n"
    result_message += (
        "\n–ù–∞—à —á–∞—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫—Ä–æ–∫–æ–¥–∏–ª @game_public_chat. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!"
    )
    return dict(text=result_message, parse_mode="HTML")


async def clear_chat_stats(chat_id):
    """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    today_str = datetime.today().strftime(".%Y-%m-%d_%H%M")
    chat_filename = get_chat_stats_filename(chat_id)
    os.rename(chat_filename, chat_filename + today_str)
